pipeline {
    agent any

    environment {
        DOCKER_NETWORK = "miapp-network"
        DJANGO_CONTAINER = "miapp-test"
        FILEBEAT_CONTAINER = "filebeat"
        PROYECTO_RUTA = pwd()
    }

    stages {
        stage('Eliminar contenedores previos') {
            steps {
                script {
                    def djangoExists = bat(script: 'docker ps -a --format "{{.Names}}" | findstr /R /C:"^%DJANGO_CONTAINER%$" || exit 0', returnStdout: true).trim()
                    if (djangoExists) {
                        bat "docker rm -f %DJANGO_CONTAINER%"
                    }

                    def filebeatExists = bat(script: 'docker ps -a --format "{{.Names}}" | findstr /R /C:"^%FILEBEAT_CONTAINER%$" || exit 0', returnStdout: true).trim()
                    if (filebeatExists) {
                        bat "docker rm -f %FILEBEAT_CONTAINER%"
                    }

                    def elasticExists = bat(script: 'docker ps -a --format "{{.Names}}" | findstr /R /C:"^elasticsearch$" || exit 0', returnStdout: true).trim()
                    if (elasticExists) {
                        bat "docker rm -f elasticsearch"
                    }
                }
            }
        }

        stage('Levantar Elasticsearch') {
            steps {
                bat """
                docker run -d --name elasticsearch ^
                    --network %DOCKER_NETWORK% ^
                    -e "discovery.type=single-node" ^
                    -e "xpack.security.enabled=false" ^
                    -p 9200:9200 ^
                    docker.elastic.co/elasticsearch/elasticsearch:8.12.0
                """
            }
        }

        stage('Desplegar Django') {
            steps {
                bat """
                docker run -d --name %DJANGO_CONTAINER% ^
                    --network %DOCKER_NETWORK% ^
                    -v %PROYECTO_RUTA%\\logs:/app/logs ^
                    -p 8000:8000 ^
                    miapp-django
                """
            }
        }

        stage('Migraciones Django') {
            steps {
                bat "docker exec %DJANGO_CONTAINER% python manage.py migrate"
            }
        }

        stage('Levantar Filebeat') {
            steps {
                bat """
                timeout /t 10
                docker run -d --name %FILEBEAT_CONTAINER% ^
                    --network %DOCKER_NETWORK% ^
                    -v %PROYECTO_RUTA%\\filebeat.yml:/usr/share/filebeat/filebeat.yml:ro ^
                    -v %PROYECTO_RUTA%\\logs:/app/logs:ro ^
                    docker.elastic.co/beats/filebeat:8.12.0 ^
                    filebeat -e -strict.perms=false
                """
            }
        }
    }

    post {
        success {
            echo 'üöÄ Aplicaci√≥n desplegada exitosamente en http://localhost:8000'
        }
        failure {
            echo '‚ùå Fall√≥ el despliegue.'
        }
    }
}
